# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: Build app

on:
  workflow_dispatch:
  push:
    branches:
      - main
    tags:
      - "*"
    paths-ignore:
      - "*.md"
      - "*.txt"
      - "*.yml"
      - "*.json"
      - .editorconfig
      - ".github/**"
      - .gitignore
      - .npmignore
  pull_request:
    branches:
      - main
    paths-ignore:
      - "*.md"
      - "*.txt"
      - "*.yml"
      - "*.json"
      - .editorconfig
      - ".github/**"
      - .gitignore
      - .npmignore

jobs:
  build:
    name: Build Windows, Linux and Mac
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
        node: ["12.x", "14.x", "16.x", "17.x"]
        runner: ["windows-latest", "ubuntu-latest", "macos-latest"]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
          registry-url: "https://registry.npmjs.org"
      - run: |
          node --version
          npm --version
          npm ci
        name: Install npm dependencies
      - run: |
          set -euo pipefail
          sudo apt-get update
          sudo apt-get install -y libnss3
        name: Install OS dependencies
        if: matrix.runner == 'ubuntu-latest'
      - run: ./test-driver.sh
        name: Verify install
        shell: bash

  build_arm64:
    name: Build arm64
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node: ["12", "14", "16", "17"]
    steps:
      - uses: actions/checkout@v2
      - uses: uraimo/run-on-arch-action@v2.1.1
        name: Verify install
        id: build
        with:
          arch: aarch64
          distro: ubuntu20.04
          env: | # this is just so we can cache each version
            nodeversion: ${{ matrix.node }}
          dockerRunArgs: |
            --volume "$PWD:/app"
          githubToken: ${{ github.token }}
          install: |
            set -euo pipefail
            apt-get update
            apt-get -y install xz-utils curl libnss3
            curl -fsSL --output sha https://nodejs.org/dist/latest-v${{ matrix.node }}.x/SHASUMS256.txt
            FULL_FILE=`grep 'node-v${{ matrix.node }}.*-linux-arm64.tar.gz' sha | tr -s ' ' | cut -d' ' -f2`
            NODE_VERSION=`echo $FULL_FILE | grep --color=never -Eo '[0-9]{2,}\.[0-9]{1,}\.[0-9]{1,}'`
            echo "Node version is $NODE_VERSION"
            ARCH=arm64
            curl -fsSLO --compressed "https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz"
            tar -xJf "node-v$NODE_VERSION-linux-$ARCH.tar.xz" -C /usr/local --strip-components=1 --no-same-owner
            rm sha
            rm "node-v$NODE_VERSION-linux-$ARCH.tar.xz"
            npm install -g npm@latest
          run: |
            node --version
            npm --version
            cd /app
            npm ci --no-progress 2>&1 | tee # todo: remove tee and redirection when https://github.com/npm/cli/issues/3314 is fixed
            BIN="./lib/chromedriver/chromedriver"
            if ! [ -e $BIN ]; then
              echo "Binary not found at $BIN"
              exit 1
            fi

  publish:
    name: Publish to npm
    runs-on: ubuntu-latest
    needs: [build, build_arm64]
    if: success() && startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 17.x
          registry-url: "https://registry.npmjs.org"
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
